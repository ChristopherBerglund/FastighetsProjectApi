// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FastighetsProjectApi_CCRA.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20210614155057_comments")]
    partial class comments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FastighetsProjectApi_CCRA.Model.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GuidID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RealEstateIde")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("RealEstateIde");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Content = "Superbra",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1995),
                            GuidID = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991798"),
                            RealEstateIde = 1,
                            UserName = "Björn"
                        },
                        new
                        {
                            id = 2,
                            Content = "Superbra men jättedåligt",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1994),
                            GuidID = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991797"),
                            RealEstateIde = 2,
                            UserName = "Nisse"
                        });
                });

            modelBuilder.Entity("FastighetsProjectApi_CCRA.Model.RealEstate", b =>
                {
                    b.Property<int>("ide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanBeRented")
                        .HasColumnType("bit");

                    b.Property<bool>("CanBeSold")
                        .HasColumnType("bit");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealestateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RentingPrice")
                        .HasColumnType("int");

                    b.Property<int?>("SellingPrice")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ide");

                    b.ToTable("RealEstates");

                    b.HasData(
                        new
                        {
                            ide = 1,
                            Address = "Hallalundavägen 12",
                            CanBeRented = false,
                            CanBeSold = true,
                            ConstructionYear = 1710,
                            Contact = "nils",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1998),
                            Description = "Lägenhetshus",
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991780"),
                            RealestateType = "Lägenhetshus",
                            SellingPrice = 120000,
                            Title = "titel1",
                            Type = 2,
                            UserName = "Björn"
                        },
                        new
                        {
                            ide = 2,
                            Address = "Hamburgarevägen 12",
                            CanBeRented = false,
                            CanBeSold = true,
                            ConstructionYear = 1850,
                            Contact = "maria",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1996),
                            Description = "Lagerlokal",
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991799"),
                            RealestateType = "Lagerlokal",
                            SellingPrice = 2000000,
                            Title = "titel2",
                            Type = 3,
                            UserName = "Nisse"
                        });
                });

            modelBuilder.Entity("FastighetsProjectApi_CCRA.Model.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Comments")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("RealEstates")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Comments = 1,
                            Rating = 4.0,
                            RealEstates = 2,
                            UserId = "hejj",
                            UserName = "Börje"
                        },
                        new
                        {
                            ID = new Guid("c9d4c053-49b6-410c-bc78-2d54a999187c"),
                            Comments = 2,
                            Rating = 5.0,
                            RealEstates = 3,
                            UserId = "hallå",
                            UserName = "Börje"
                        });
                });

            modelBuilder.Entity("FastighetsProjectApi_CCRA.Model.Comment", b =>
                {
                    b.HasOne("FastighetsProjectApi_CCRA.Model.RealEstate", null)
                        .WithMany("Comments")
                        .HasForeignKey("RealEstateIde")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FastighetsProjectApi_CCRA.Model.RealEstate", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
